@using Authentication.web.Pages
@using Authentication.web.utility;
@using Microsoft.AspNetCore.SignalR.Client;

<MudPaper Width="250px" Elevation="0" Class="py-3">
    <MudNavMenu Bordered="true">
        <AuthorizeView Roles=@($"{utility.Roles.User}")>
            <Authorized>
                <MudNavLink Href="StDashBoard">Dashboard</MudNavLink>
            </Authorized>
        </AuthorizeView>
        <AuthorizeView Roles=@($"{utility.Roles.Admin}")>
            <Authorized>
                <MudNavGroup Title="utilisateurs" Expanded="true" Icon="@Icons.Material.Outlined.ManageAccounts">
                    <MudNavLink Href="UserManagement">Gestionnaire d'utilisateurs</MudNavLink>
                    <MudNavLink Href="">Gestionnaire de Roles</MudNavLink>-
                </MudNavGroup>
                <MudNavGroup Title="Quiz" Expanded="true"Icon="@Icons.Material.Outlined.Quiz">
                    <MudNavLink Href="QuizManagement">Gestionnaire de Quiz</MudNavLink>
                    <MudNavLink Href="QuestionManagement">Gestionnaire de Questions</MudNavLink>   
                </MudNavGroup>
            </Authorized>
        </AuthorizeView>
        <MudNavLink Href="Authentification"> Authentication</MudNavLink>
        <MudNavLink Href="Inscription"> Inscription</MudNavLink>
        
    </MudNavMenu>
</MudPaper>




@*<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Authentication.web</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Authentification">
                <span class="oi oi-plus" aria-hidden="true"></span> Authentication
            </NavLink>
        </div>
        <AuthorizeView Roles=@($"{Roles.Admin}, {Roles.User}")>

            <Authorized >
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="">
                <span class="oi oi-plus" aria-hidden="true"></span> Users
            </NavLink>
        </div>
            </Authorized>
        </AuthorizeView>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Inscription">
                <span class="oi oi-plus" aria-hidden="true"></span> Inscription
            </NavLink>
        </div>
    </nav>
</div>*@

@code {
    [Inject]
    public IDialogService DialogService { get; set; }
    public string SelectedOption { get; set; }
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    string state = "Message box hasn't been opened yet";
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    [Inject]
    public IJSRuntime jsruntime { get; set; }

    private HubConnection _hubConnection { get; set; }


    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl("https://localhost:7284/notificationshub")
            .Build();

        _hubConnection.On<string, string>("ReceiveMessage", async (user, message) =>
        {
            await jsruntime.InvokeAsync<string>("PlayAudio");
            bool? result = await DialogService.ShowMessageBox("Updates", "A new Quiz have been assigned To you!", yesText: "OK!");
            state = result == null ? "Canceled" : "Deleted!";
            // StateHasChanged();
           
        });
        

        await _hubConnection.StartAsync();
    }

}
